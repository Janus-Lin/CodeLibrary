"""
CodeLibrary.__init__.py
~~~~~~~~~~~~~~~~~~~~~~~

Function: 

Crater: lin
CreateDate: 2022-01-06
"""
'''
迭代器协议

    迭代器协议：对象需要提供next方法，它要么返回迭代中的下一项，要么引起一个StopIteration异常，以终止迭代
    可迭代对象：实现了迭代器协议的对象

 迭代器

    迭代器是访问集合内元素的一种方式，一般用来遍历数据
    迭代器和以下标的访问方式不一样，迭代器是不能返回的（比如下标方式 list[2],之后可以访问list[0],list[1]，只能__next__），迭代器提供了一种惰性方式获取数据（就是只有在访问数据的时候才去计算或者说才去获取数据）

生成器

    python使用生成器对延迟操作提供了支持，所谓延迟操作，是指在需要的时候才产生结果，而不是立即产生结果。这也是生成器的主要好处

生成器函数

    与常规函数不同的是：使用yield语句而不是return语句返回结果。yield语句一次返回一个结果，在每个结果中间，挂起函数，下次执行的时候，从上一次挂起地方开始。

生成器表达式

    返回的是一个生成器对象，这个对象只有在需要的时候才产生结果

 
'''